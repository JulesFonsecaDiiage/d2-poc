<?php

namespace App\Controller\Admin;

use App\Entity\Default\Entite;
use App\Entity\Facturation\PrestationDiversConsolide;
use App\Service\PeriodGenerator;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Config\Filters;
use EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\DateField;
use EasyCorp\Bundle\EasyAdminBundle\Field\MoneyField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use EasyCorp\Bundle\EasyAdminBundle\Filter\ChoiceFilter;
use EasyCorp\Bundle\EasyAdminBundle\Filter\EntityFilter;

class PrestationDiversConsolideCrudController extends AbstractCrudController
{
    private EntityManagerInterface $entityManager;

    public function __construct(EntityManagerInterface $entityManager)
    {
        $this->entityManager = $entityManager;
    }

    public static function getEntityFqcn(): string
    {
        return PrestationDiversConsolide::class;
    }

    public function configureCrud(Crud $crud): Crud
    {
        return $crud
            ->setEntityLabelInSingular('Prestation Divers')
            ->setEntityLabelInPlural('Prestations Divers')
            ->setDefaultSort([
                'periode' => 'DESC',
            ])
        ;
    }

    public function configureFields(string $pageName): iterable
    {
        return [
            TextField::new('entiteName', 'Entité') // Champ calculé
            ->formatValue(function ($value, $entity) {
                // Récupération de l'Entite en fonction de son UUID
                $entite = $this->entityManager->getRepository(Entite::class)->findOneBy(['uuid' => $entity->getUuidEntite()]);
                return $entite ? $entite->getName() : 'Non trouvé';
            })
                ->setSortable(false),
            DateField::new('periode')->setFormat('Y - MMMM'),
            MoneyField::new('total_ht')->setCurrency('EUR'),
            AssociationField::new('prestationDiversConsolidePrestations', 'Prestations')
                ->hideOnForm()
        ];
    }

    public function index(AdminContext $context)
    {
        return parent::index($context); // TODO: Change the autogenerated stub
    }

    public function configureFilters(Filters $filters): Filters
    {
        return $filters
            ->add(EntityFilter::new('entite')->canSelectMultiple())
            ->add(ChoiceFilter::new('periode')->setChoices(PeriodGenerator::generatePeriods())->canSelectMultiple())
            ->add('total_ht')
        ;
    }
}
